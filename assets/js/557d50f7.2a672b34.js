"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[597],{3905:function(e,a,n){n.d(a,{Zo:function(){return l},kt:function(){return u}});var t=n(7294);function c(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){c(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function f(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var o=t.createContext({}),d=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},l=function(e){var a=d(e.components);return t.createElement(o.Provider,{value:a},e.children)},b={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},i=t.forwardRef((function(e,a){var n=e.components,c=e.mdxType,r=e.originalType,o=e.parentName,l=f(e,["components","mdxType","originalType","parentName"]),i=d(n),u=c,p=i["".concat(o,".").concat(u)]||i[u]||b[u]||r;return n?t.createElement(p,s(s({ref:a},l),{},{components:n})):t.createElement(p,s({ref:a},l))}));function u(e,a){var n=arguments,c=a&&a.mdxType;if("string"==typeof e||c){var r=n.length,s=new Array(r);s[0]=i;var f={};for(var o in a)hasOwnProperty.call(a,o)&&(f[o]=a[o]);f.originalType=e,f.mdxType="string"==typeof e?e:c,s[1]=f;for(var d=2;d<r;d++)s[d]=n[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}i.displayName="MDXCreateElement"},5384:function(e,a,n){n.r(a),n.d(a,{assets:function(){return B},contentTitle:function(){return h},default:function(){return x},frontMatter:function(){return m},metadata:function(){return v},toc:function(){return g}});var t=n(7462),c=n(3366),r=n(7294),s=n(3905),f=n(2389),o=n(3725),d=n(6010),l="tabItem_LplD";function b(e){var a,n,c,s=e.lazy,f=e.block,b=e.defaultValue,i=e.values,u=e.groupId,p=e.className,m=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=i?i:m.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),v=(0,o.lx)(h,(function(e,a){return e.value===a.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var B=null===b?b:null!=(a=null!=b?b:null==(n=m.find((function(e){return e.props.default})))?void 0:n.props.value)?a:null==(c=m[0])?void 0:c.props.value;if(null!==B&&!h.some((function(e){return e.value===B})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+B+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,o.UB)(),k=g.tabGroupChoices,x=g.setTabGroupChoices,T=(0,r.useState)(B),y=T[0],N=T[1],w=[],A=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=u){var C=k[u];null!=C&&C!==y&&h.some((function(e){return e.value===C}))&&N(C)}var S=function(e){var a=e.currentTarget,n=w.indexOf(a),t=h[n].value;t!==y&&(A(a),N(t),null!=u&&x(u,t))},I=function(e){var a,n=null;switch(e.key){case"ArrowRight":var t=w.indexOf(e.currentTarget)+1;n=w[t]||w[0];break;case"ArrowLeft":var c=w.indexOf(e.currentTarget)-1;n=w[c]||w[w.length-1]}null==(a=n)||a.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":f},p)},h.map((function(e){var a=e.value,n=e.label,c=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:y===a?0:-1,"aria-selected":y===a,key:a,ref:function(e){return w.push(e)},onKeyDown:I,onFocus:S,onClick:S},c,{className:(0,d.Z)("tabs__item",l,null==c?void 0:c.className,{"tabs__item--active":y===a})}),null!=n?n:a)}))),s?(0,r.cloneElement)(m.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},m.map((function(e,a){return(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==y})}))))}function i(e){var a=(0,f.Z)();return r.createElement(b,(0,t.Z)({key:String(a)},e))}function u(e){var a=e.children,n=e.hidden,t=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:t},a)}var p=["components"],m={sidebar_position:2},h="\ud83c\udfafAccounts API Endpoints",v={unversionedId:"bscsan-netcore/accounts-api",id:"bscsan-netcore/accounts-api",title:"\ud83c\udfafAccounts API Endpoints",description:"Endpoints with \ud83c\udd7f\ud83c\udd81\ud83c\udd7e are under the API Pro subscription. To upgrade your API plan, browse through the BscScan APIs page.",source:"@site/docs/bscsan-netcore/accounts-api.mdx",sourceDirName:"bscsan-netcore",slug:"/bscsan-netcore/accounts-api",permalink:"/docs/bscsan-netcore/accounts-api",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/bscsan-netcore/accounts-api.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udc32Get Started",permalink:"/docs/bscsan-netcore/get-start"},next:{title:"Create a Page",permalink:"/docs/tutorial-basics/create-a-page"}},B={},g=[{value:"\ud83d\udcb0Get BNB Balance for a Single Address",id:"get-bnb-balance-for-a-single-address",level:3},{value:"Returns the BNB balance of a given address.",id:"returns-the-bnb-balance-of-a-given-address",level:4},{value:"\ud83d\udcb0Get BNB Balance for <strong>Multiple Addresses in a Single Call</strong>",id:"get-bnb-balance-for-multiple-addresses-in-a-single-call",level:3},{value:"Returns the balance of the accounts from a list of addresses.",id:"returns-the-balance-of-the-accounts-from-a-list-of-addresses",level:4},{value:"\ud83d\udcb0Get Historical BNB Balance for a Single Address by BlockNo <code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"get-historical-bnb-balance-for-a-single-address-by-blockno-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the historical BNB balance of an address at a certain block height.",id:"returns-the-historical-bnb-balance-of-an-address-at-a-certain-block-height",level:4},{value:"\ud83d\udcb0Get a list of &#39;Normal&#39; Transactions By Address",id:"get-a-list-of-normal-transactions-by-address",level:3},{value:"Returns the list of transactions performed by an address, with optional pagination.",id:"returns-the-list-of-transactions-performed-by-an-address-with-optional-pagination",level:4}],k={toc:g};function x(e){var a=e.components,n=(0,c.Z)(e,p);return(0,s.kt)("wrapper",(0,t.Z)({},k,n,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"accounts-api-endpoints"},"\ud83c\udfafAccounts API Endpoints"),(0,s.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Notes")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Endpoints with ",(0,s.kt)("inlineCode",{parentName:"p"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")," are under the API Pro subscription. To upgrade your API plan, browse through the ",(0,s.kt)("a",{parentName:"p",href:"https://bscscan.com/s_checkout"},"BscScan APIs")," page."))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//imports\nusing BscScan.NetCore.Contracts;\nusing BscScan.NetCore.Models.Request.Accounts;\n\n//inject\nprivate readonly IBscScanContractsService _bscScanContractsService;\n")),(0,s.kt)("h3",{id:"get-bnb-balance-for-a-single-address"},"\ud83d\udcb0Get BNB Balance for a Single Address"),(0,s.kt)("h4",{id:"returns-the-bnb-balance-of-a-given-address"},"Returns the BNB balance of a given address."),(0,s.kt)(i,{mdxType:"Tabs"},(0,s.kt)(u,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'//Sample Request \ud83c\udf4e\nvar balance = await _bscScanAccountsService.GetBnbBalanceAsync(new BnbBalanceRequest\n                {\n                    Address = "0x70F657164e5b75689b64B7fd1fA275F334f28e18",\n                    Tag = Tag.Latest\n                });\n'))),(0,s.kt)(u,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object BnbBalance with  values: \ud83c\udf4a\nvar balance = new BnbBalance {\n     Staus="1",\n     Message="OK",\n     Result="154476596514118000947297331"\n};\n'))),(0,s.kt)(u,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out  ",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/accounts#get-bnb-balance-for-a-single-address"},"Get BNB Balance for a Single Address"))),(0,s.kt)("h3",{id:"get-bnb-balance-for-multiple-addresses-in-a-single-call"},"\ud83d\udcb0Get BNB Balance for ",(0,s.kt)("strong",{parentName:"h3"},"Multiple Addresses in a Single Call")),(0,s.kt)("h4",{id:"returns-the-balance-of-the-accounts-from-a-list-of-addresses"},"Returns the balance of the accounts from a list of addresses."),(0,s.kt)(i,{mdxType:"Tabs"},(0,s.kt)(u,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'//Sample Request \ud83c\udf4e\nstring[] addresses =\n        {"0x70F657164e5b75689b64B7fd1fA275F334f28e18","0x3f349bBaFEc1551819B8be1EfEA2fC46cA749aA1" };\n\nvar balances = await _bscScanAccountsService.GetMultipleBnbBalanceAsync(new MultipleBnbBalanceRequest\n              {\n                    Addresses = addresses\n              });\n'))),(0,s.kt)(u,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object BnbMultipleBalances with  values: \ud83c\udf4a\nvar balances = new BnbMultipleBalances\n                {\n                    Message = "OK",\n                    Status = "1",\n                    Result = new List<BnbMultipleBalanceData>\n                    {\n                        new()\n                        {\n                            Account = "0x3f349bBaFEc1551819B8be1EfEA2fC46cA749aA1",\n                            Balance = "37700000000000001"\n                        },\n                        new()\n                        {\n                            Account = "0x4bF01a5A576bE1254C5E19fbE5EB195D6cFBeBdD",\n                            Balance = "4999777740000000000"\n                        },\n                        new()\n                        {\n                            Account = "0x70F657164e5b75689b64B7fd1fA275F334f28e18",\n                            Balance = "57443177693229716"\n                        }\n                    }    \n                };\n'))),(0,s.kt)(u,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out ",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/accounts#get-bnb-balance-for-multiple-addresses-in-a-single-call"},"Get BNB Balance for Multiple Addresses in a Single Call"))),(0,s.kt)("h3",{id:"get-historical-bnb-balance-for-a-single-address-by-blockno-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\ud83d\udcb0Get Historical BNB Balance for a Single Address by BlockNo ",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-historical-bnb-balance-of-an-address-at-a-certain-block-height"},"Returns the historical BNB balance of an address at a certain block height."),(0,s.kt)(i,{mdxType:"Tabs"},(0,s.kt)(u,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'//Sample Request \ud83c\udf4e\n\nvar balance = await _bscScanAccountsService\n                .GetHistoricalBnbBalanceByBlockNoAsync("0x0DB011018728D1B91dDB3C77933a40B9B68C9fa7",2000000);\n'))),(0,s.kt)(u,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object BnbBalanceHistoryByBlockNo with  values: \ud83c\udf4a\nvar balance = new BnbBalanceHistoryByBlockNo\n                {\n                  Status = "1",\n                  Message ="OK",\n                  Result = new List<BnbBalanceHistoryByBlockNoData>\n                    {\n                        new()\n                        {\n                             Account = "0x3f349bBaFEc1551819B8be1EfEA2fC46cA749aA1",\n                             Balance = "37700000000000001"\n                        },\n                        new()\n                        {\n                            Account = "0x4bF01a5A576bE1254C5E19fbE5EB195D6cFBeBdD",\n                            Balance = "4999777740000000000"\n                        },\n                        new()\n                        {\n                            Account = "0x70F657164e5b75689b64B7fd1fA275F334f28e18",\n                            Balance = "57443177693229716"\n                        }\n                    }  \n                };\n'))),(0,s.kt)(u,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out ",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/accounts#get-historical-bnb-balance-for-a-single-address-by-blockno"},"Get Historical BNB Balance for a Single Address by BlockNo"))),(0,s.kt)("h3",{id:"get-a-list-of-normal-transactions-by-address"},"\ud83d\udcb0Get a list of 'Normal' Transactions By Address"),(0,s.kt)("h4",{id:"returns-the-list-of-transactions-performed-by-an-address-with-optional-pagination"},"Returns the list of transactions performed by an address, with optional pagination."),(0,s.kt)(i,{mdxType:"Tabs"},(0,s.kt)(u,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'//Sample Request \ud83c\udf4e\n\n  var parameters = new InternalTransactionsRequest\n            {\n                Address = "0xF426a8d0A94bf039A35CEE66dBf0227A7a12D11e",\n\n                //optional parameters with default values\n                //Sort = // default asc\n                //EndBlock =  // default 9999999\n                //OffSet =  // default 10\n                //Page =  //default 1\n                //StartBlock  //default 0 \n            };\n\n  var normalTransactions = await _bscScanAccountsService\n                .GetNormalTransactionsByAddressAsync(parameters);\n'))),(0,s.kt)(u,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object NormalTransactions with  values: \ud83c\udf4a\nvar balance = new BnbBalanceHistoryByBlockNo\n                {\n                  Status = "1",\n                  Message ="OK",\n                  Result = new List<NormalTransactionData>\n                    {\n                        new()\n                        {\n                            BlockNumber = "10475175",\n                            TimeStamp = "1630314219",\n                            Hash = "0x9c12ea64ffe659114e1404509ae82d52ca8b785851ef99405d31a6b65fb4d0a2",\n                            Nonce = "851069",\n                            BlockHash = "0x52754e796549fe9ab7a4550e0f7d8286fdc8efcac185aad7e7c63ff7c0fb1e5a",\n                            TransactionIndex = "22",\n                            From = "0x161ba15a5f335c9f06bb5bbb0a9ce14076fbb645",\n                            To = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            Value = "90541060000000000",\n                            Gas = "207128",\n                            GasPrice = "10000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "894108",\n                            GasUsed = "21000",\n                            Confirmations = "2362"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10477535",\n                            TimeStamp = "1630321300",\n                            Hash = "0xb119836850a9f30e9191e7445bfc97ccc5fda00884639178bce42818f837ee18",\n                            Nonce = "0",\n                            BlockHash = "0x2423e7586ed4a73715818e6ea7f17e74d0ac948a852f549a5b9f7d4f3bc6ea70",\n                            TransactionIndex = "181",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x55d398326f99059ff775485246999027b3197955",\n                            Value = "0",\n                            Gas = "53731",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x095ea7b300000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "19645702",\n                            GasUsed = "44406",\n                            Confirmations = "5381267"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10477043",\n                            TimeStamp = "1630319824",\n                            Hash = "0x6e713dbd313aa175b401e983c242d16b022939f95ca6b9691f77e2e22273e119",\n                            Nonce = "1",\n                            BlockHash = "0x5f257165d2652c584bdc732e4103bd9936db184643b76b5f79d0ebf3c83f4bee",\n                            TransactionIndex = "101",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x10ed43c718714eb63d5aa57b78b54704e256024e",\n                            Value = "0",\n                            Gas = "248827",\n                            GasPrice = "5000000000",\n                            IsError = "1",\n                            TxReceiptStatus = "0",\n                            Input = "0x38ed173900000000000000000000000000000000000000000000000821ab0d441498000000000000000000000000000000000000000000000000060c0fd51f58cb54c26300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f426a8d0a94bf039a35cee66dbf0227a7a12d11e00000000000000000000000000000000000000000000000000000000612cb96e000000000000000000000000000000000000000000000000000000000000000300000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c000000000000000000000000fbe0b4ae6e5a200c36a341299604d5f71a5f0a48",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "20086138",\n                            GasUsed = "38978",\n                            Confirmations = "5379517"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10477046",\n                            TimeStamp = "1630319833",\n                            Hash = "0x649d0d3d26c98a9f9184e61e66e7b45ebe212694d49ed6c7cbeff756b840fdbf",\n                            Nonce = "2",\n                            BlockHash = "0xcffc61a913fdcdc848887a9c9f1827079cde876257d8914aa9cde56bbd247214",\n                            TransactionIndex = "199",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x10ed43c718714eb63d5aa57b78b54704e256024e",\n                            Value = "0",\n                            Gas = "248827",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x38ed173900000000000000000000000000000000000000000000000821ab0d44149800000000000000000000000000000000000000000000000005f2e5e6d9f3bec73fd100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f426a8d0a94bf039a35cee66dbf0227a7a12d11e00000000000000000000000000000000000000000000000000000000612cb97a000000000000000000000000000000000000000000000000000000000000000300000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c000000000000000000000000fbe0b4ae6e5a200c36a341299604d5f71a5f0a48",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "28162844",\n                            GasUsed = "195000",\n                            Confirmations = "5379514"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10477535",\n                            TimeStamp = "1630321300",\n                            Hash = "0xf95f98ec21315ce7b397be1911719c9b3ab0e9386a34103e052ab36e41e9dc3f",\n                            Nonce = "3",\n                            BlockHash = "0xaa8e7de4eaced07d438438dfab90c84fea2e270f50a71418a89c87852d2b2a2a",\n                            TransactionIndex = "253",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x10ed43c718714eb63d5aa57b78b54704e256024e",\n                            Value = "0",\n                            Gas = "254285",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x38ed173900000000000000000000000000000000000000000000000805e99fdcc5d000000000000000000000000000000000000000000000000000976181709dbde2904900000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f426a8d0a94bf039a35cee66dbf0227a7a12d11e00000000000000000000000000000000000000000000000000000000612e1ec5000000000000000000000000000000000000000000000000000000000000000300000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c0000000000000000000000002d5c9167fdd5c068c8fcb8992e6af639b42fbf70",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "45034490",\n                            GasUsed = "199442",\n                            Confirmations = "5379025"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10477545",\n                            TimeStamp = "1630321330",\n                            Hash = "0x51bc460532089aceb56598db9620748c70c1aba0e63b38e624225c6ae34ac172",\n                            Nonce = "4",\n                            BlockHash = "0x6be6eec2812617396c8aa2c15e430582b24f0e18944545574ce309edc2aad01e",\n                            TransactionIndex = "190",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x10ed43c718714eb63d5aa57b78b54704e256024e",\n                            Value = "0",\n                            Gas = "235847",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x38ed173900000000000000000000000000000000000000000000000805e99fdcc5d0000000000000000000000000000000000000000000000000009519b6c56da3ee2b3400000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f426a8d0a94bf039a35cee66dbf0227a7a12d11e00000000000000000000000000000000000000000000000000000000612e1ee3000000000000000000000000000000000000000000000000000000000000000300000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c0000000000000000000000002d5c9167fdd5c068c8fcb8992e6af639b42fbf70",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "32042276",\n                            GasUsed = "184442",\n                            Confirmations = "5379015"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10477563",\n                            TimeStamp = "1630321384",\n                            Hash = "0x6c6dfe100921c4a13ca52e94304e146a39c64a9cefc033dd0affee39add6863e",\n                            Nonce = "5",\n                            BlockHash = "0xac1c762de805b6d06e1fb37da8e6bad6154881e229ce39ce1f32b8ca4d901d1f",\n                            TransactionIndex = "225",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x2d5c9167fdd5c068c8fcb8992e6af639b42fbf70",\n                            Value = "0",\n                            Gas = "57043",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x095ea7b300000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "34059780",\n                            GasUsed = "46817",\n                            Confirmations = "5378997"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10478649",\n                            TimeStamp = "1630324648",\n                            Hash = "0x707f56ec3ab9073a6ed2bfb1d880a49854ed823852f723da22c0095071d6adee",\n                            Nonce = "6",\n                            BlockHash = "0xc40bbe4f55a9dbd8dcbf62cf2142931f78907d00597991b0721166bbdae579cf",\n                            TransactionIndex = "293",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0xfbe0b4ae6e5a200c36a341299604d5f71a5f0a48",\n                            Value = "0",\n                            Gas = "54616",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x095ea7b300000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "37091490",\n                            GasUsed = "45138",\n                            Confirmations = "5377911"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10478679",\n                            TimeStamp = "1630324738",\n                            Hash = "0xad1aea072bb58c561da0de9a213ee8b7aa17f7cfc8ef167ef12cb661ce90af0d",\n                            Nonce = "7",\n                            BlockHash = "0x5217dba007f2c69312123ec8e2302f149d1cf8212464b594818983d62b714494",\n                            TransactionIndex = "223",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x10ed43c718714eb63d5aa57b78b54704e256024e",\n                            Value = "0",\n                            Gas = "230655",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x38ed17390000000000000000000000000000000000000000000005fa7ea25a8ef97159d9000000000000000000000000000000000000000000000009e7b204ca2fb818cf00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f426a8d0a94bf039a35cee66dbf0227a7a12d11e00000000000000000000000000000000000000000000000000000000612e2c360000000000000000000000000000000000000000000000000000000000000003000000000000000000000000fbe0b4ae6e5a200c36a341299604d5f71a5f0a48000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000055d398326f99059ff775485246999027b3197955",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "31135123",\n                            GasUsed = "165429",\n                            Confirmations = "5377881"\n                        },\n                        new()\n                        {\n                            BlockNumber = "10478709",\n                            TimeStamp = "1630324828",\n                            Hash = "0xbe203b6c918806c5900d437d9b574b9d0ca24dc3a6a36c62cd9d40057f0c2bd5",\n                            Nonce = "8",\n                            BlockHash = "0x5b8c99e89415d92d9327a703b4fd15cae0a9183736efaa57d489602b31d5a823",\n                            TransactionIndex = "294",\n                            From = "0xf426a8d0a94bf039a35cee66dbf0227a7a12d11e",\n                            To = "0x10ed43c718714eb63d5aa57b78b54704e256024e",\n                            Value = "0",\n                            Gas = "235776",\n                            GasPrice = "5000000000",\n                            IsError = "0",\n                            TxReceiptStatus = "1",\n                            Input = "0x38ed173900000000000000000000000000000000000000000000012f799d681ae5bd2f270000000000000000000000000000000000000000000000105b17f83ed8f790a300000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f426a8d0a94bf039a35cee66dbf0227a7a12d11e00000000000000000000000000000000000000000000000000000000612e2c8a00000000000000000000000000000000000000000000000000000000000000030000000000000000000000002d5c9167fdd5c068c8fcb8992e6af639b42fbf70000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c00000000000000000000000055d398326f99059ff775485246999027b3197955",\n                            ContractAddress = "",\n                            CumulativeGasUsed = "34879027",\n                            GasUsed = "181746",\n                            Confirmations = "5377851"\n                        }\n                    }  \n                };\n'))),(0,s.kt)(u,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out ",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/accounts#get-a-list-of-normal-transactions-by-address"},"Get a list of 'Normal' Transactions By Address"))))}x.isMDXComponent=!0}}]);