"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1498],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return a?n.createElement(b,i(i({ref:t},u),{},{components:a})):n.createElement(b,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8215:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(7294);function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(7462),r=a(7294),s=a(2389),i=a(3725),o=a(6010),l="tabItem_LplD";function c(e){var t,a,s,c=e.lazy,u=e.block,d=e.defaultValue,p=e.values,m=e.groupId,b=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=p?p:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,i.lx)(v,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(s=h[0])?void 0:s.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var f=(0,i.UB)(),w=f.tabGroupChoices,g=f.setTabGroupChoices,T=(0,r.useState)(k),N=T[0],S=T[1],D=[],x=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var B=w[m];null!=B&&B!==N&&v.some((function(e){return e.value===B}))&&S(B)}var C=function(e){var t=e.currentTarget,a=D.indexOf(t),n=v[a].value;n!==N&&(x(t),S(n),null!=m&&g(m,n))},R=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=D.indexOf(e.currentTarget)+1;a=D[n]||D[0];break;case"ArrowLeft":var r=D.indexOf(e.currentTarget)-1;a=D[r]||D[D.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},b)},v.map((function(e){var t=e.value,a=e.label,s=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return D.push(e)},onKeyDown:R,onFocus:C,onClick:C},s,{className:(0,o.Z)("tabs__item",l,null==s?void 0:s.className,{"tabs__item--active":N===t})}),null!=a?a:t)}))),c?(0,r.cloneElement)(h.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function u(e){var t=(0,s.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},8962:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},assets:function(){return p},toc:function(){return m},default:function(){return h}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),i=a(9877),o=a(8215),l=["components"],c={sidebar_position:9},u="\ud83c\udfafStats API Endpoints",d={unversionedId:"bscsan-netcore/stats-api",id:"bscsan-netcore/stats-api",title:"\ud83c\udfafStats API Endpoints",description:"Endpoints with \ud83c\udd7f\ud83c\udd81\ud83c\udd7e are under the API Pro subscription. To upgrade your API plan, browse through the BscScan APIs page.",source:"@site/docs/bscsan-netcore/stats-api.mdx",sourceDirName:"bscsan-netcore",slug:"/bscsan-netcore/stats-api",permalink:"/docs/bscsan-netcore/stats-api",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/bscsan-netcore/stats-api.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udfafGas Tracker API Endpoints",permalink:"/docs/bscsan-netcore/gas-tracker-api"},next:{title:"Create a Page",permalink:"/docs/tutorial-basics/create-a-page"}},p={},m=[{value:"\ud83c\udff7Get Total Supply of BNB on the BNB Smart Chain",id:"get-total-supply-of-bnb-on-the-bnb-smart-chain",level:3},{value:"Returns the current amount of BNB in circulation.",id:"returns-the-current-amount-of-bnb-in-circulation",level:4},{value:"\ud83c\udff7Get Validators List on the BNB Smart Chain",id:"get-validators-list-on-the-bnb-smart-chain",level:3},{value:"Returns the top 21 validators for the BNB Smart Chain.",id:"returns-the-top-21-validators-for-the-bnb-smart-chain",level:4},{value:"\ud83c\udff7Get BNB Last Price",id:"get-bnb-last-price",level:3},{value:"Returns the latest price of 1 BNB.",id:"returns-the-latest-price-of-1-bnb",level:4},{value:"\ud83c\udff7Get BNB Historical Price <code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"get-bnb-historical-price-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the historical price of 1 BNB.",id:"returns-the-historical-price-of-1-bnb",level:4},{value:"\ud83c\udff7Get Daily Network Transaction Fee <code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"get-daily-network-transaction-fee-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the historical amount of transaction fees paid to validators per day.",id:"returns-the-historical-amount-of-transaction-fees-paid-to-validators-per-day",level:4},{value:"\ud83c\udff7Get Daily New Address Count <code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"get-daily-new-address-count-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the historical number of new BNB Smart Chain addresses created per day.",id:"returns-the-historical-number-of-new-bnb-smart-chain-addresses-created-per-day",level:4},{value:"\ud83c\udff7Get Daily Network Utilization<code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"get-daily-network-utilization\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the daily average gas used over gas limit percentage.",id:"returns-the-daily-average-gas-used-over-gas-limit-percentage",level:4},{value:"\ud83c\udff7Get Daily Transaction Count<code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"get-daily-transaction-count\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the number of transactions performed on the Ethereum blockchain per day.",id:"returns-the-number-of-transactions-performed-on-the-ethereum-blockchain-per-day",level:4}],b={toc:m};function h(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"stats-api-endpoints"},"\ud83c\udfafStats API Endpoints"),(0,s.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Notes")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Endpoints with ",(0,s.kt)("inlineCode",{parentName:"p"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")," are under the API Pro subscription. To upgrade your API plan, browse through the ",(0,s.kt)("a",{parentName:"p",href:"https://bscscan.com/s_checkout"},"BscScan APIs")," page."))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//imports\nusing BscScan.NetCore.Contracts;\n\n//inject\nprivate readonly IBscScanStatsService _bscScanStatsService;\n")),(0,s.kt)("h3",{id:"get-total-supply-of-bnb-on-the-bnb-smart-chain"},"\ud83c\udff7Get Total Supply of BNB on the BNB Smart Chain"),(0,s.kt)("h4",{id:"returns-the-current-amount-of-bnb-in-circulation"},"Returns the current amount of BNB in circulation."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\n var totalSupplyOfBnb = await _bscScanStatsService.GetTotalSupplyAsync();\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object TotalSupply with values: \ud83c\udf4a\nvar totalSupplyOfBnb = new TotalSupply\n            {\n                Status = "1",\n                Message = "OK",\n                Result ="22573626345184400000000000"\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-total-supply-of-bnb-on-the-bnb-smart-chain"}," Get Total Supply of BNB on the BNB Smart Chain"))),(0,s.kt)("h3",{id:"get-validators-list-on-the-bnb-smart-chain"},"\ud83c\udff7Get Validators List on the BNB Smart Chain"),(0,s.kt)("h4",{id:"returns-the-top-21-validators-for-the-bnb-smart-chain"},"Returns the top 21 validators for the BNB Smart Chain."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\nvar validatorsList = await _bscScanStatsService.GetValidatorsListAsync();\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object ValidatorsList with values: \ud83c\udf4a\nvar validatorsList = new ValidatorsList\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new List<ValidatorsListData>\n                {\n                    new()\n                    {\n                        ValidatorAddress = "0x9f8ccdafcc39f3c7d6ebf637c9151673cbc36b88",\n                        ValidatorName = "",\n                        ValidatorStatus = "0",\n                        ValidatorVotingPower = "43379676392570",\n                        ValidatorVotingPowerProportion = "0.0617"\n                    },\n                    new()\n                    {\n                        ValidatorAddress = "0x2465176c461afb316ebc773c61faee85a6515daa",\n                        ValidatorName = "",\n                        ValidatorStatus = "0",\n                        ValidatorVotingPower = "38039845465042",\n                        ValidatorVotingPowerProportion = "0.0541"\n                    }\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-validators-list-on-the-bnb-smart-chain"}," Get Validators List on the BNB Smart Chain"))),(0,s.kt)("h3",{id:"get-bnb-last-price"},"\ud83c\udff7Get BNB Last Price"),(0,s.kt)("h4",{id:"returns-the-latest-price-of-1-bnb"},"Returns the latest price of 1 BNB."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\n  var bnbLastPrice = await _bscScanStatsService.GetBnbLastPriceAsync();\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object BnbLastPrice with values: \ud83c\udf4a\nvar bnbLastPrice = new BnbLastPrice\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new BnbLastPriceData\n                {\n                    EthBtc = "0.009534",\n                    EthBtcTimestamp = "1647011846",\n                    EthUsd = "372.37",\n                    EthUsdTimestamp = "1647011851"\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-bnb-last-price"}," Get BNB Last Price"))),(0,s.kt)("h3",{id:"get-bnb-historical-price-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\ud83c\udff7Get BNB Historical Price ",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-historical-price-of-1-bnb"},"Returns the historical price of 1 BNB."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\nvar parameters = new BnbHistoricalPriceRequest\n            {\n                StartDate = new DateOnly(2021, 8, 1),\n                EndDate = new DateOnly(2021, 8, 31),\n                Sort = Sort.Asc\n            };\n\nvar bnbHistoricalPrice = await _bscScanStatsService.GetBnbHistoricalPriceAsync(parameters);\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object BnbHistoricalPrice with values: \ud83c\udf4a\nvar bnbHistoricalPrice = new BnbHistoricalPrice\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new List<BnbHistoricalPriceData>\n                {\n                    new()\n                    {\n                        UtcDate = "2021-08-01",\n                        UnixTimeStamp = "1627776000",\n                        Value = "332.79"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-02",\n                        UnixTimeStamp = "1627862400",\n                        Value = "330.72"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-30",\n                        UnixTimeStamp = "1630281600",\n                        Value = "460.05"\n                    }\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-bnb-historical-price"}," Get BNB Historical Price `\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))),(0,s.kt)("h3",{id:"get-daily-network-transaction-fee-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\ud83c\udff7Get Daily Network Transaction Fee ",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-historical-amount-of-transaction-fees-paid-to-validators-per-day"},"Returns the historical amount of transaction fees paid to validators per day."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\nvar parameters = new DailyNetworkTransactionFeeRequest\n            {\n                StartDate = new DateOnly(2020,10,1),\n                EndDate = new DateOnly(2020,10,31),\n                Sort = Sort.Asc\n            };\nvar dailyNetworkTransactionFee = await _bscScanStatsService.GetDailyNetworkTransactionFeeAsync(parameters);\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object DailyNetworkTransactionFee with values: \ud83c\udf4a\nvar dailyNetworkTransactionFee = new DailyNetworkTransactionFee\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new List<DailyNetworkTransactionFeeData>\n                {\n                    new()\n                    {\n                        UtcDate = "2020-10-01",\n                        UnixTimeStamp = "1601510400",\n                        TransactionFeeEth = "356.764105308852361"\n                    },\n                    new()\n                    {\n                        UtcDate = "2020-10-02",\n                        UnixTimeStamp = "1601596800",\n                        TransactionFeeEth = "270.806833010901929108"\n                    },\n                    new()\n                    {\n                        UtcDate = "2020-10-31",\n                        UnixTimeStamp = "1604102400",\n                        TransactionFeeEth = "352.100068789871253431"\n                    }\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-daily-network-transaction-fee"}," Get Daily Network Transaction Fee `\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))),(0,s.kt)("h3",{id:"get-daily-new-address-count-\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\ud83c\udff7Get Daily New Address Count ",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-historical-number-of-new-bnb-smart-chain-addresses-created-per-day"},"Returns the historical number of new BNB Smart Chain addresses created per day."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\nvar parameters = new DailyNewAddressCountRequest\n            {\n                StartDate = new DateOnly(2020, 10, 1),\n                EndDate = new DateOnly(2020, 10, 31),\n                Sort = Sort.Asc\n            };\nvar dailyNewAddressCount = await _bscScanStatsService.GetDailyNewAddressCountAsync(parameters);\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object DailyNewAddressCount with values: \ud83c\udf4a\nvar dailyNewAddressCount = new DailyNewAddressCount\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new List<DailyNewAddressCountData>\n                {\n                    new()\n                    {\n                        UtcDate = "2020-10-01",\n                        UnixTimeStamp = "1601510400",\n                        NewAddressCount = "3544"\n                    },\n                    new()\n                    {\n                        UtcDate = "2020-10-02",\n                        UnixTimeStamp = "1601596800",\n                        NewAddressCount = "6524"\n                    },\n                    new()\n                    {\n                        UtcDate = "2020-10-31",\n                        UnixTimeStamp = "1604102400",\n                        NewAddressCount = "8284"\n                    }\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-daily-new-address-count"}," Get Daily New Address Count`\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))),(0,s.kt)("h3",{id:"get-daily-network-utilization\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\ud83c\udff7Get Daily Network Utilization",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-daily-average-gas-used-over-gas-limit-percentage"},"Returns the daily average gas used over gas limit percentage."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\n var parameters = new DailyNetworkUtilizationRequest\n            {\n                StartDate = new DateOnly(2021, 07, 1),\n                EndDate = new DateOnly(2021, 7, 31),\n                Sort = Sort.Asc\n            };\nvar dailyNetworkUtilization = await _bscScanStatsService.GetDailyNetworkUtilizationAsync(parameters);\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object DailyNetworkUtilization with values: \ud83c\udf4a\nvar dailyNetworkUtilization = new DailyNetworkUtilization\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new List<DailyNetworkUtilizationData>\n                {\n                    new()\n                    {\n                        UtcDate = "2021-08-01",\n                        UnixTimeStamp = "1627776000",\n                        NetworkUtilization = "0.7528"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-02",\n                        UnixTimeStamp = "1627862400",\n                        NetworkUtilization = "0.7051"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-30",\n                        UnixTimeStamp = "1630281600",\n                        NetworkUtilization = "0.4893"\n                    }\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-daily-network-utilization"}," Get Daily Network Utilization`\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))),(0,s.kt)("h3",{id:"get-daily-transaction-count\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\ud83c\udff7Get Daily Transaction Count",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-number-of-transactions-performed-on-the-ethereum-blockchain-per-day"},"Returns the number of transactions performed on the Ethereum blockchain per day."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\nvar parameters = new DailyTransactionCountRequest\n            {\n                StartDate = new DateOnly(2021, 07, 1),\n                EndDate = new DateOnly(2021, 7, 31),\n                Sort = Sort.Asc\n            };\nvar dailyTransactionCount = await _bscScanStatsService.GetDailyTransactionCountAsync(parameters);\n"))),(0,s.kt)(o.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object DailyTransactionCount with values: \ud83c\udf4a\nvar dailyTransactionCount = new DailyTransactionCount\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new List<DailyTransactionCountData>\n                {\n                    new()\n                    {\n                        UtcDate = "2021-08-01",\n                        UnixTimeStamp = "1548979200",\n                        TransactionCount =498856\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-02",\n                        UnixTimeStamp = "1627862400",\n                        TransactionCount = 541458\n                    }\n                }\n            };\n'))),(0,s.kt)(o.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/stats-1#get-daily-transaction-count"}," Get Daily Transaction Count`\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))))}h.isMDXComponent=!0}}]);