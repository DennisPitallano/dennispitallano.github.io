"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[225],{3905:function(e,a,t){t.d(a,{Zo:function(){return u},kt:function(){return d}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),c=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=c(e.components);return n.createElement(o.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=r,v=m["".concat(o,".").concat(d)]||m[d]||p[d]||s;return t?n.createElement(v,i(i({ref:a},u),{},{components:t})):n.createElement(v,i({ref:a},u))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=m;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<s;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8215:function(e,a,t){t.d(a,{Z:function(){return r}});var n=t(7294);function r(e){var a=e.children,t=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:r},a)}},9877:function(e,a,t){t.d(a,{Z:function(){return u}});var n=t(3117),r=t(7294),s=t(2389),i=t(9575),l=t(6010),o="tabItem_LplD";function c(e){var a,t,s,c=e.lazy,u=e.block,p=e.defaultValue,m=e.values,d=e.groupId,v=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:g.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),h=(0,i.lx)(b,(function(e,a){return e.value===a.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===p?p:null!=(a=null!=p?p:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?a:null==(s=g[0])?void 0:s.props.value;if(null!==f&&!b.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,i.UB)(),k=y.tabGroupChoices,w=y.setTabGroupChoices,G=(0,r.useState)(f),T=G[0],S=G[1],D=[],N=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var x=k[d];null!=x&&x!==T&&b.some((function(e){return e.value===x}))&&S(x)}var P=function(e){var a=e.currentTarget,t=D.indexOf(a),n=b[t].value;n!==T&&(N(a),S(n),null!=d&&w(d,n))},O=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n=D.indexOf(e.currentTarget)+1;t=D[n]||D[0];break;case"ArrowLeft":var r=D.indexOf(e.currentTarget)-1;t=D[r]||D[D.length-1]}null==(a=t)||a.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":u},v)},b.map((function(e){var a=e.value,t=e.label,s=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===a?0:-1,"aria-selected":T===a,key:a,ref:function(e){return D.push(e)},onKeyDown:O,onFocus:P,onClick:P},s,{className:(0,l.Z)("tabs__item",o,null==s?void 0:s.className,{"tabs__item--active":T===a})}),null!=t?t:a)}))),c?(0,r.cloneElement)(g.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,a){return(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==T})}))))}function u(e){var a=(0,s.Z)();return r.createElement(c,(0,n.Z)({key:String(a)},e))}},8366:function(e,a,t){t.r(a),t.d(a,{assets:function(){return m},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var n=t(3117),r=t(102),s=(t(7294),t(3905)),i=t(9877),l=t(8215),o=["components"],c={sidebar_position:8},u=void 0,p={unversionedId:"bscsan-netcore/gas-tracker-api",id:"bscsan-netcore/gas-tracker-api",title:"gas-tracker-api",description:"Endpoints with \ud83c\udd7f\ud83c\udd81\ud83c\udd7e are under the API Pro subscription. To upgrade your API plan, browse through the BscScan APIs page.",source:"@site/docs/bscsan-netcore/gas-tracker-api.mdx",sourceDirName:"bscsan-netcore",slug:"/bscsan-netcore/gas-tracker-api",permalink:"/docs/bscsan-netcore/gas-tracker-api",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/bscsan-netcore/gas-tracker-api.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"tokens-api",permalink:"/docs/bscsan-netcore/tokens-api"},next:{title:"stats-api",permalink:"/docs/bscsan-netcore/stats-api"}},m={},d=[{value:"\u26fd\ufe0fGet Gas Oracle",id:"\ufe0fget-gas-oracle",level:3},{value:"Returns the current Safe, Proposed and Fast gas prices.",id:"returns-the-current-safe-proposed-and-fast-gas-prices",level:4},{value:"\u26fd\ufe0fGet Daily Average Gas Limit<code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"\ufe0fget-daily-average-gas-limit\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the historical daily average gas limit of the BNB Smart Chain network.",id:"returns-the-historical-daily-average-gas-limit-of-the-bnb-smart-chain-network",level:4},{value:"\u26fd\ufe0fGet BNB Smart Chain Daily Total Gas Used<code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"\ufe0fget-bnb-smart-chain-daily-total-gas-used\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the total amount of gas used daily for transctions on the BNB Smart Chain network.",id:"returns-the-total-amount-of-gas-used-daily-for-transctions-on-the-bnb-smart-chain-network",level:4},{value:"\u26fd\ufe0fGet Daily Average Gas Price<code>\ud83c\udd7f\ud83c\udd81\ud83c\udd7e</code>",id:"\ufe0fget-daily-average-gas-price\ud83c\udd7f\ud83c\udd81\ud83c\udd7e",level:3},{value:"Returns the daily average gas price used on the BNB Smart Chain network.",id:"returns-the-daily-average-gas-price-used-on-the-bnb-smart-chain-network",level:4}],v={toc:d};function g(e){var a=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},v,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"gas-tracker-api-endpoints"},"\ud83c\udfafGas Tracker API Endpoints"),(0,s.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Notes")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Endpoints with ",(0,s.kt)("inlineCode",{parentName:"p"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")," are under the API Pro subscription. To upgrade your API plan, browse through the ",(0,s.kt)("a",{parentName:"p",href:"https://bscscan.com/s_checkout"},"BscScan APIs")," page."))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//imports\nusing BscScan.NetCore.Contracts;\n\n//inject\nprivate readonly IBscScanGasTrackerService _bscScanGasTrackerService;\n")),(0,s.kt)("h3",{id:"\ufe0fget-gas-oracle"},"\u26fd\ufe0fGet Gas Oracle"),(0,s.kt)("h4",{id:"returns-the-current-safe-proposed-and-fast-gas-prices"},"Returns the current Safe, Proposed and Fast gas prices."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\n  var gasOracle = await _bscScanGasTrackerService.GetGasOracleAsync();\n"))),(0,s.kt)(l.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object GasOracle with values: \ud83c\udf4a\nvar gasOracle = new GasOracle\n            {\n                Status = "1",\n                Message = "OK",\n                Result = new GasOracleData\n                {\n                    LastBlock = "15939320",\n                    SafeGasPrice = "5",\n                    ProposeGasPrice = "5.5",\n                    FastGasPrice = "27.5",\n                    UsdPrice = "371.25"\n                }\n            };\n'))),(0,s.kt)(l.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/gas-tracker#get-gas-oracle"}," Get Gas Oracle"))),(0,s.kt)("h3",{id:"\ufe0fget-daily-average-gas-limit\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\u26fd\ufe0fGet Daily Average Gas Limit",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-historical-daily-average-gas-limit-of-the-bnb-smart-chain-network"},"Returns the historical daily average gas limit of the BNB Smart Chain network."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\n var parameters = new DailyAverageGasLimitRequest\n            {\n                StartDate = new DateOnly(2021,8,1),\n                EndDate = new DateOnly(2021,8,28),\n                Sort = Sort.Asc\n            };\nvar dailyAverageGasLimit = await _bscScanGasTrackerService.GetDailyAverageGasLimitAsync(parameters);\n"))),(0,s.kt)(l.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object DailyAverageGasLimit with values: \ud83c\udf4a\nvar dailyAverageGasLimit= new DailyAverageGasLimit\n            {\n                Status = "1",\n                Message = "OK",\n                Result =new List<DailyAverageGasLimitData>\n                {\n                    new()\n                    {\n                        UtcDate = "2021-08-01",\n                        UnixTimeStamp = "1627776000",\n                        GasLimit = "77995057"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-02",\n                        UnixTimeStamp = "1627862400",\n                        GasLimit = "77477220"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-08-03",\n                        UnixTimeStamp = "1627948800",\n                        GasLimit = "77163193"\n                    }\n                }\n            };\n'))),(0,s.kt)(l.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/gas-tracker#get-daily-average-gas-limit"}," Get Daily Average Gas Limit`\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))),(0,s.kt)("h3",{id:"\ufe0fget-bnb-smart-chain-daily-total-gas-used\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\u26fd\ufe0fGet BNB Smart Chain Daily Total Gas Used",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-total-amount-of-gas-used-daily-for-transctions-on-the-bnb-smart-chain-network"},"Returns the total amount of gas used daily for transctions on the BNB Smart Chain network."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\nvar parameters = new BnbSmartChainDailyTotalGasUsedRequest\n            {\n                StartDate = new DateOnly(2021,8,1),\n                EndDate = new DateOnly(2021,8,28),\n                Sort = Sort.Asc\n            };\nvar bnbSmartChainDailyTotalGasUsed = await _bscScanGasTrackerService\n                    .GetBnbSmartChainDailyTotalGasUsedAsync(parameters);\n"))),(0,s.kt)(l.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object BnbSmartChainDailyTotalGasUsed with values: \ud83c\udf4a\nvar bnbSmartChainDailyTotalGasUsed= new BnbSmartChainDailyTotalGasUsed\n            {\n                Status = "1",\n                Message = "OK",\n                Result =new List<BnbSmartChainDailyTotalGasUsedData>\n                {\n                    new()\n                    {\n                        UtcDate = "2021-02-01",\n                        UnixTimeStamp = "1612137600",\n                        GasUsed = "70672744503"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-02-02",\n                        UnixTimeStamp = "1612224000",\n                        GasUsed = "73905877156"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-02-03",\n                        UnixTimeStamp = "1612310400",\n                        GasUsed = "75696419315"\n                    }\n                }\n            };\n'))),(0,s.kt)(l.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/gas-tracker#get-bnb-smart-chain-daily-total-gas-used"}," Get BNB Smart Chain Daily Total Gas Used`\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))),(0,s.kt)("h3",{id:"\ufe0fget-daily-average-gas-price\ud83c\udd7f\ud83c\udd81\ud83c\udd7e"},"\u26fd\ufe0fGet Daily Average Gas Price",(0,s.kt)("inlineCode",{parentName:"h3"},"\ud83c\udd7f\ud83c\udd81\ud83c\udd7e")),(0,s.kt)("h4",{id:"returns-the-daily-average-gas-price-used-on-the-bnb-smart-chain-network"},"Returns the daily average gas price used on the BNB Smart Chain network."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"request",label:"Request",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"//Sample Request \ud83c\udf4e\n var parameters = new DailyAverageGasPriceRequest\n            {\n                StartDate = new DateOnly(2021,8,1),\n                EndDate = new DateOnly(2021,8,28),\n                Sort = Sort.Asc\n            };\nvar dailyAverageGasPrice = await _bscScanGasTrackerService.GetDailyAverageGasPriceAsync(parameters);\n"))),(0,s.kt)(l.Z,{value:"response",label:"Response",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'//will return a new object DailyAverageGasPrice with values: \ud83c\udf4a\nvar dailyAverageGasPricea= new DailyAverageGasPrice\n            {\n                Status = "1",\n                Message = "OK",\n                Result =new List<DailyAverageGasPriceData>\n                {\n                    new()\n                    {\n                        UtcDate = "2021-02-01",\n                        UnixTimeStamp = "1612137600",\n                        MaxGasPriceWei = "4557272900001",\n                        MinGasPriceWei = "20000000000",\n                        AvgGasPriceWei = "26264086210"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-02-02",\n                        UnixTimeStamp = "1612224000",\n                        MaxGasPriceWei = "5449370028101",\n                        MinGasPriceWei = "20000000000",\n                        AvgGasPriceWei = "26877628667"\n                    },\n                    new()\n                    {\n                        UtcDate = "2021-02-03",\n                        UnixTimeStamp = "1612310400",\n                        MaxGasPriceWei = "5440938161363",\n                        MinGasPriceWei = "20000000000",\n                        AvgGasPriceWei = "24451656852"\n                    }\n                }\n            };\n'))),(0,s.kt)(l.Z,{value:"...",label:"...",mdxType:"TabItem"},"\ud83c\udf4c For more information Check out",(0,s.kt)("a",{target:"_blank",href:"https://docs.bscscan.com/api-endpoints/gas-tracker#get-daily-average-gas-price"}," Get Daily Average Gas Price`\ud83c\udd7f\ud83c\udd81\ud83c\udd7e`"))))}g.isMDXComponent=!0}}]);